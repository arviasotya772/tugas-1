{"trial_id": "1", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_conv_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_0_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_0)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation", "default": "sigmoid", "conditions": [], "values": ["sigmoid", "softmax"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_1_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_2_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_3_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_4_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_1)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_2)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_3)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_5_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_6_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_7_filter", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_4)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_5)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_6)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_7)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_8)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_9)unit", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}], "values": {"num_conv_layers": 8, "conv_0_filter": 96, "num_dense_layers": 10, "dense_0)unit": 512, "activation": "sigmoid", "learning_rate": 0.01, "conv_1_filter": 32, "conv_2_filter": 128, "conv_3_filter": 96, "conv_4_filter": 128, "dense_1)unit": 384, "dense_2)unit": 384, "dense_3)unit": 256, "conv_5_filter": 32, "conv_6_filter": 32, "conv_7_filter": 32, "dense_4)unit": 32, "dense_5)unit": 32, "dense_6)unit": 32, "dense_7)unit": 32, "dense_8)unit": 32, "dense_9)unit": 32}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 173, in _try_build\n    size = maybe_compute_model_size(model)\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 463, in maybe_compute_model_size\n    params = [math.prod(p.shape) for p in model.trainable_weights]\n  File \"c:\\ProgramData\\anaconda3\\envs\\viskom\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 463, in <listcomp>\n    params = [math.prod(p.shape) for p in model.trainable_weights]\nAttributeError: module 'math' has no attribute 'prod'\n"}